--CREATE DATABASE SSIS_STUDY;

--USE SSIS_STUDY;

--USE THIS TABLE FOR SSIS PROJECT "FlatFile_To_DataBase".
CREATE TABLE CUSTOMERS(
	CustomerNumber INT,
	Name Varchar(50),
	Address Varchar(100),
	City Varchar(30),
	State Varchar(30),
	Zip INT
);

SELECT * FROM CUSTOMERS;
------------------------------------------------------------------------------------------------------------------------------------------
--USE THIS TABLE FOR SSIS PROJECT-> "EXCEL_TO_SQL".
--USE EXCEL SHEET "Student_Marks" TO LOAD DATA IN THIS TABLE.
CREATE TABLE STUDENTS(
	ROLL_NUMBER INT IDENTITY(1001,1) PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	MIDDLE_NAME VARCHAR(50),
	LAST_NAME VARCHAR(50) NOT NULL,
	GENDER VARCHAR(1) NOT NULL,
	MARATHI INT NOT NULL CHECK(MARATHI < 0 OR MARATHI <= 100),
	HINDI INT NOT NULL CHECK(HINDI < 0 OR HINDI <= 100),
	ENGLISH INT NOT NULL CHECK(ENGLISH < 0 OR ENGLISH <= 100),
	SCIENCE INT NOT NULL CHECK(SCIENCE < 0 OR SCIENCE <= 100),
	MATHS INT NOT NULL CHECK(MATHS < 0 OR MATHS <= 100),
	HISTORY INT NOT NULL CHECK(HISTORY < 0 OR HISTORY <= 100),
	GEOGRAPHY INT NOT NULL CHECK(GEOGRAPHY < 0 OR GEOGRAPHY <= 100)
);

--SET IDENTITY_INSERT STUDENTS ON;
--SET IDENTITY_INSERT STUDENTS OFF;

SELECT * FROM STUDENTS;
--TRUNCATE TABLE STUDENTS;
--DROP TABLE STUDENTS;

SELECT
	CONCAT(FIRST_NAME,' ',MIDDLE_NAME, ' ',ISNULL(LAST_NAME, ' '))
FROM 
	STUDENTS;

SELECT
	ROLL_NUMBER
FROM 
	STUDENTS
where MIDDLE_NAME is null;

SELECT LEN(MIDDLE_NAME) FROM STUDENTS;

UPDATE
	STUDENTS
SET
	MIDDLE_NAME = NULL
WHERE
	LEN(MIDDLE_NAME) = 0;
------------------------------------------------------------------------------------------------------------------------------------------
--FOR SSIS PROJECT "Package_Level_Parameter" USE FOLLOWING COMMANDS.
--THE "?" CONTAINS PACKAGE LEVEL PARAMETER VALUE i.e. "CA".

SELECT * FROM CUSTOMERS
WHERE State = ?
------------------------------------------------------------------------------------------------------------------------------------------
--FOR SSIS PROJECT "Project_Level_Parameter" USE FOLLOWING COMMANDS.
--THE "?" CONTAINS PROJECT LEVEL PARAMETER VALUE i.e. 60643.

SELECT * FROM CUSTOMERS
WHERE Zip = ?
------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE STUDENTS_DWH(
	ROLL_NUMBER INT IDENTITY(1001,1) PRIMARY KEY,
	FULL_NAME VARCHAR(60),
	GENDER VARCHAR(1) NOT NULL,
	MARATHI INT NOT NULL CHECK(MARATHI < 0 OR MARATHI <= 100),
	HINDI INT NOT NULL CHECK(HINDI < 0 OR HINDI <= 100),
	ENGLISH INT NOT NULL CHECK(ENGLISH < 0 OR ENGLISH <= 100),
	SCIENCE INT NOT NULL CHECK(SCIENCE < 0 OR SCIENCE <= 100),
	MATHS INT NOT NULL CHECK(MATHS < 0 OR MATHS <= 100),
	HISTORY INT NOT NULL CHECK(HISTORY < 0 OR HISTORY <= 100),
	GEOGRAPHY INT NOT NULL CHECK(GEOGRAPHY < 0 OR GEOGRAPHY <= 100),
	TOTAL INT,
	PERCENTAGE DECIMAL(4,2),
	RESULT VARCHAR(4)
);
--SET IDENTITY_INSERT STUDENTS_DWH ON;
--SET IDENTITY_INSERT STUDENTS_DWH OFF;

SELECT * FROM STUDENTS_DWH;
--TRUNCATE TABLE STUDENTS_DWH;
--DROP TABLE STUDENTS_DWH;
------------------------------------------------------------------------------------------------------------------------------------------
-- USE "ITEM_LOOKUP_BASICS" AND "ITEM_SALES_LOOKUP_BASICS" TABLE FOR PROJECT "Lookup_Transformation_Basic".
CREATE TABLE ITEM_LOOKUP_BASICS(
	ITEM_CODES INT,
	ITEM_DESC VARCHAR(15)
);
INSERT INTO ITEM_LOOKUP_BASICS VALUES
(1, 'ACDC'),(2, 'BDED'), (3, 'AAAA'), (4, 'DPQD'), (5, 'BBBB'), (6, 'DDDD'), (7, 'GGGG'), (8, 'OPRT');
SELECT * FROM ITEM_LOOKUP_BASICS;

CREATE TABLE ITEM_SALES_LOOKUP_BASICS(
	ITEM_CODE INT,
	QTY INT,
	VALUE INT,
	SP_NAME VARCHAR(25)
);

SELECT * FROM ITEM_LOOKUP_BASICS;
SELECT * FROM ITEM_SALES_LOOKUP_BASICS;

--TRUNCATE TABLE ITEM_SALES_LOOKUP_BASICS;
--DROP TABLE ITEM_SALES_LOOKUP_BASICS;
------------------------------------------------------------------------------------------------------------------------------------------
-- USE THESE TABLES IN "Lookup_Transformation_Scenarios".  THERE ARE TOTAL 14 TABLES FOR 7 SCENARIOS i.e. 2 TABLES FOR EACH SCENARIO.
-- FOR CASE_1: CASE_1_SOURCE, CASE_1_LOOKUP
-- CASE 1 IS "EQUI JOIN". i.e. BOTH TABLE HAVE SAME DATA & SAME NUMBER OF RECORDS.

CREATE TABLE CASE_1_SOURCE(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_1_SOURCE 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (4, 'JAIDEEP');

CREATE TABLE CASE_1_LOOKUP(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_1_LOOKUP 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (4, 'JAIDEEP');


-- FOR CASE_2: CASE_2_SOURCE, CASE_2_LOOKUP
-- CASE 2 IS "MORE NUMBER OF RECORDS IN SOURCE TABLE".

CREATE TABLE CASE_2_SOURCE(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_2_SOURCE 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (4, 'JAIDEEP');

CREATE TABLE CASE_2_LOOKUP(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_2_LOOKUP 
VALUES(1, 'JOANNE'), (2, 'HOWARD');


-- FOR CASE_3: CASE_3_SOURCE, CASE_3_LOOKUP
-- CASE 3 IS "MORE NUMBER OF RECORDS IN LOOKUP(REFERENCE) TABLE".

CREATE TABLE CASE_3_SOURCE(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_3_SOURCE 
VALUES(1, 'JOANNE'), (2, 'HOWARD');

CREATE TABLE CASE_3_LOOKUP(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_3_LOOKUP 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (4, 'JAIDEEP');


-- FOR CASE_4: CASE_4_SOURCE, CASE_4_LOOKUP
-- CASE 4 IS "DUPLICATE RECORDS IN SOURCE TABLE".

CREATE TABLE CASE_4_SOURCE(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_4_SOURCE 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (3, 'ERIC');

CREATE TABLE CASE_4_LOOKUP(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_4_LOOKUP 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC');


-- FOR CASE_5: CASE_5_SOURCE, CASE_5_LOOKUP
-- CASE 5 IS "DUPLICATE RECORDS IN LOOKUP TABLE".

CREATE TABLE CASE_5_SOURCE(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_5_SOURCE 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC');

CREATE TABLE CASE_5_LOOKUP(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_5_LOOKUP 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (3, 'ERIC');


-- FOR CASE_6: CASE_6_SOURCE, CASE_6_LOOKUP
-- CASE 6 IS "CASE SENSITIVE".

CREATE TABLE CASE_6_SOURCE(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_6_SOURCE 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (4, 'JAIDEEP');

CREATE TABLE CASE_6_LOOKUP(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_6_LOOKUP 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'Eric'), (4, 'JAIDEEP');


-- FOR CASE_: CASE_7_SOURCE, CASE_7_LOOKUP
-- CASE 7 IS "NULL VALUE".

CREATE TABLE CASE_7_SOURCE(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_7_SOURCE 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (4, NULL);

CREATE TABLE CASE_7_LOOKUP(
	ID INT,
	NAME VARCHAR(20)
);

INSERT INTO CASE_7_LOOKUP 
VALUES(1, 'JOANNE'), (2, 'HOWARD'), (3, 'ERIC'), (4, NULL);
------------------------------------------------------------------------------------------------------------------------------------------